# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  win: circleci/windows@5.0.0
  slack: circleci/slack@3.4.2
  kubernetes: circleci/kubernetes@0.11.0
  helm: circleci/helm@1.2.0
  gcloud: circleci/gcp-cli@2.1.0
  queue: eddiewebb/queue@volatile
  codecov: codecov/codecov@3.0.0

executors:
  python-37:
    docker:
      - image: python:3.7-slim-buster
  python-38:
    docker:
      - image: python:3.8-slim-buster
  python-39:
    docker:
      - image: python:3.9-slim-buster

parameters:
  det-version:
    type: string
    default: 0.19.4-dev0
  docker-image:
    type: string
    default: determinedai/cimg-base:latest
  machine-image:
    type: string
    default: ubuntu-2004:202201-02
  gpu-machine-image:
    type: string
    default: ubuntu-2004-cuda-11.2:202103-01
  # Some python, go, and react dependencies are cached by circleci via `save_cache`/`restore_cache`.
  # If the dependencies stay the same, but the circleci code that would produce them is changed,
  # it may be necessary to invalidate the cache by incrementing this value.
  # For example, if you change an env variable affecting a build of a python package with the same version,
  # the old build may be cached, and you may need to invalidate it.
  cache-buster:
    type: string
    default: v1dev12
  gke-version:
    type: string
    default: "1.21.14"

release-and-rc-filters: &release-and-rc-filters
  branches:
    ignore:
      - /.*/
  tags:
    only:
      - /(\d)+(\.(\d)+)+/
      - /((\d)+(\.(\d)+)+)(-rc)(\d)+/

rc-filters: &rc-filters
  branches:
    ignore:
      - /.*/
  tags:
    only:
      - /((\d)+(\.(\d)+)+)(-rc)(\d)+/

release-filters: &release-filters
  branches:
    ignore:
      - /.*/
  tags:
    only:
      - /(\d)+(\.(\d)+)+/

upstream-feature-branch: &upstream-feature-branch
  branches:
    ignore:
      - /pull\/.*/
      - /release-.*/
      - master

any-upstream: &any-upstream
  branches:
    ignore:
      - /pull\/.*/

commands:
  login-helm:
    steps:
      - run: helm repo add determined https://helm.ngc.nvidia.com/isv-ngc-partner/determined --username=$NGC_API_USERNAME --password=$NGC_API_KEY

jobs:
  build-helm:
    docker:
      - image: <<pipeline.parameters.docker-image>>
    steps:
      - checkout
      - helm/install-helm-client
      - attach_workspace:
          at: .
      - run: make -C helm build
      - persist_to_workspace:
          root: .
          paths:
            - helm/build
      - store_artifacts:
          path: helm/build


  publish-helm:
    docker:
      - image: <<pipeline.parameters.docker-image>>
    steps:
      - checkout
      - attach_workspace:
          at: .
      - helm/install-helm-client
      - run: helm plugin install https://github.com/chartmuseum/helm-push.git
      - login-helm
      - run: make -C helm release

  publish-helm-gh:
    docker:
      - image: cimg/go:1.18
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: make -C helm release-gh

  release:
    jobs:
      - build-helm:
          filters: *release-and-rc-filters

      - publish-helm:
          requires:
            - build-helm
          context: determined-production
          filters: *release-and-rc-filters

      - publish-helm-gh:
          requires:
            - build-helm
          context: determined-production
          filters: *release-filters
